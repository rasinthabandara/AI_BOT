function _0x4fdb() { const _0x2c75f1 = ['6802548YfOFPw', 'role', 'JWTKEY', 'Authorization', '../config/config', '110uxJjKz', 'email', '6345346YtcnFl', 'length', 'No\x20token\x20found', '\x27\x20and\x20password\x20=\x20\x27', 'log', 'verify', '4864350JHCxqS', 'SELECT\x20*\x20FROM\x20admin\x20WHERE\x20email\x20=\x20\x27', 'decode', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20email\x20=\x20\x27', 'Access\x20denies!\x20Invalid\x20token\x20found.', '197847ZSvADh', 'json', 'Database\x20query\x20error', '760GDcLcq', 'admin', 'password', 'get', 'Invalid\x20token\x20found', 'Your\x20token:\x20', '15154kNdzYP', 'user', '10370148VBEdAB', 'query', '6761430JvQfIg', 'Unauthorized\x20token', 'env', 'split']; _0x4fdb = function () { return _0x2c75f1; }; return _0x4fdb(); } const _0x3bc04c = _0x21cf; function _0x21cf(_0x5f585f, _0x4b2a6d) { const _0x4fdb32 = _0x4fdb(); return _0x21cf = function (_0x21cf06, _0x26440c) { _0x21cf06 = _0x21cf06 - 0x15c; let _0x3494a1 = _0x4fdb32[_0x21cf06]; return _0x3494a1; }, _0x21cf(_0x5f585f, _0x4b2a6d); } (function (_0x3d5c7f, _0x2d4613) { const _0x22d72e = _0x21cf, _0x5ba11f = _0x3d5c7f(); while (!![]) { try { const _0x3576af = parseInt(_0x22d72e(0x169)) / 0x1 * (parseInt(_0x22d72e(0x15c)) / 0x2) + -parseInt(_0x22d72e(0x171)) / 0x3 + parseInt(_0x22d72e(0x164)) / 0x4 + parseInt(_0x22d72e(0x160)) / 0x5 + parseInt(_0x22d72e(0x15e)) / 0x6 + -parseInt(_0x22d72e(0x16b)) / 0x7 + parseInt(_0x22d72e(0x179)) / 0x8 * (-parseInt(_0x22d72e(0x176)) / 0x9); if (_0x3576af === _0x2d4613) break; else _0x5ba11f['push'](_0x5ba11f['shift']()); } catch (_0x560034) { _0x5ba11f['push'](_0x5ba11f['shift']()); } } }(_0x4fdb, 0xf3c26)); const con = require(_0x3bc04c(0x168)), jwt = require('jsonwebtoken'); module['exports'] = { 'isvalid': async (_0x1d8c07, _0x543038, _0x10c4d9) => { const _0x3c0703 = _0x3bc04c, _0x43dc4c = _0x1d8c07[_0x3c0703(0x17c)](_0x3c0703(0x167)); if (!_0x43dc4c) return _0x543038[_0x3c0703(0x177)]({ 'msg': 'No\x20token\x20found', 'token': _0x3c0703(0x17e) + _0x43dc4c, 'logout': !![] }); try { if (_0x43dc4c) jwt[_0x3c0703(0x170)](_0x43dc4c[_0x3c0703(0x163)]('\x20')[0x1], process[_0x3c0703(0x162)][_0x3c0703(0x166)], (_0x368e0e, _0x2bbe12) => { const _0x1d0599 = _0x3c0703; if (_0x368e0e) return _0x543038[_0x1d0599(0x177)]({ 'success': 0x0, 'msg': 'Invalid\x20token\x20found', 'token': _0x43dc4c, 'logout': !![] }); else con['query'](_0x1d0599(0x172) + _0x2bbe12[_0x1d0599(0x16a)] + '\x27\x20and\x20password\x20=\x20\x27' + _0x2bbe12[_0x1d0599(0x17b)] + '\x27', (_0x2f9c2d, _0x44f395) => { const _0x158475 = _0x1d0599; if (_0x2f9c2d) { _0x543038[_0x158475(0x177)]({ 'success': ![], 'msg': _0x158475(0x178), 'err': _0x2f9c2d, 'token': _0x43dc4c }); return; } else { if (_0x44f395[_0x158475(0x16c)] > 0x0) { if (_0x44f395[0x0][_0x158475(0x165)] === _0x158475(0x17a)) _0x1d8c07[_0x158475(0x173)] = _0x2bbe12, _0x10c4d9(); else return _0x543038[_0x158475(0x177)]({ 'success': 0x0, 'msg': _0x158475(0x161), 'token': _0x43dc4c, 'logout': !![] }); } else return console[_0x158475(0x16f)](_0x44f395), _0x543038[_0x158475(0x177)]({ 'success': 0x0, 'msg': 'Invalid\x20token\x20found', 'token': _0x43dc4c, 'logout': !![] }); } }); }); else return _0x543038[_0x3c0703(0x177)]({ 'success': 0x0, 'msg': _0x3c0703(0x175), 'logout': !![] }); } catch (_0x5b3791) { console[_0x3c0703(0x16f)](_0x5b3791); } }, 'isuser': async (_0x2b39ec, _0x3e6bfd, _0x218012) => { const _0x21dee9 = _0x3bc04c, _0x1135d3 = _0x2b39ec[_0x21dee9(0x17c)](_0x21dee9(0x167)); if (!_0x1135d3) return _0x3e6bfd['json']({ 'msg': _0x21dee9(0x16d), 'token': _0x21dee9(0x17e) + _0x1135d3, 'logout': !![] }); try { if (_0x1135d3) jwt[_0x21dee9(0x170)](_0x1135d3[_0x21dee9(0x163)]('\x20')[0x1], process[_0x21dee9(0x162)][_0x21dee9(0x166)], (_0x68bd85, _0x35afed) => { const _0x1c58cb = _0x21dee9; if (_0x68bd85) return _0x3e6bfd[_0x1c58cb(0x177)]({ 'success': 0x0, 'msg': _0x1c58cb(0x17d), 'token': _0x1135d3, 'logout': !![] }); else con[_0x1c58cb(0x15f)](_0x1c58cb(0x174) + _0x35afed[_0x1c58cb(0x16a)] + _0x1c58cb(0x16e) + _0x35afed[_0x1c58cb(0x17b)] + '\x27', (_0x3fd7a6, _0x4725a1) => { const _0x297d2c = _0x1c58cb; if (_0x3fd7a6) { _0x3e6bfd[_0x297d2c(0x177)]({ 'success': ![], 'msg': _0x297d2c(0x178), 'err': _0x3fd7a6, 'token': _0x1135d3 }); return; } else { if (_0x4725a1[_0x297d2c(0x16c)] > 0x0) { if (_0x4725a1[0x0][_0x297d2c(0x165)] === _0x297d2c(0x15d)) _0x2b39ec[_0x297d2c(0x173)] = _0x35afed, _0x218012(); else return _0x3e6bfd[_0x297d2c(0x177)]({ 'success': 0x0, 'msg': _0x297d2c(0x161), 'token': _0x1135d3, 'logout': !![] }); } else return _0x3e6bfd[_0x297d2c(0x177)]({ 'success': 0x0, 'msg': 'Invalid\x20token\x20found', 'token': _0x1135d3, 'logout': !![] }); } }); }); else return _0x3e6bfd[_0x21dee9(0x177)]({ 'success': 0x0, 'msg': _0x21dee9(0x175), 'logout': !![] }); } catch (_0x2612e0) { console[_0x21dee9(0x16f)](_0x2612e0); } }, 'isvaliddownload': async (_0xb919d, _0x1360af, _0x4982ef) => { const _0x5241cc = _0x3bc04c, _0x5abf48 = _0xb919d[_0x5241cc(0x15f)]['token']; if (!_0x5abf48) return _0x1360af[_0x5241cc(0x177)]({ 'msg': _0x5241cc(0x16d), 'token': 'Your\x20token:\x20' + _0x5abf48, 'logout': !![] }); try { if (_0x5abf48) jwt['verify'](_0x5abf48, process[_0x5241cc(0x162)][_0x5241cc(0x166)], (_0xe3e50c, _0x17d63e) => { const _0x3fcff9 = _0x5241cc; if (_0xe3e50c) return _0x1360af[_0x3fcff9(0x177)]({ 'success': 0x0, 'msg': _0x3fcff9(0x17d), 'logout': !![] }); else con[_0x3fcff9(0x15f)](_0x3fcff9(0x172) + _0x17d63e[_0x3fcff9(0x16a)] + _0x3fcff9(0x16e) + _0x17d63e[_0x3fcff9(0x17b)] + '\x27', (_0x2cfcb2, _0x39580e) => { const _0x467974 = _0x3fcff9; if (_0x2cfcb2) { _0x1360af[_0x467974(0x177)]({ 'success': ![], 'msg': 'Database\x20query\x20error', 'err': _0x2cfcb2, 'token': _0x5abf48 }); return; } else { if (_0x39580e[_0x467974(0x16c)] > 0x0) { if (_0x39580e[0x0][_0x467974(0x165)] === _0x467974(0x17a)) _0xb919d[_0x467974(0x173)] = _0x17d63e, _0x4982ef(); else return _0x1360af[_0x467974(0x177)]({ 'success': 0x0, 'msg': _0x467974(0x161), 'token': _0x5abf48, 'logout': !![] }); } else return _0x1360af[_0x467974(0x177)]({ 'success': 0x0, 'msg': 'Invalid\x20token\x20found', 'token': _0x5abf48, 'logout': !![] }); } }); }); else return _0x1360af[_0x5241cc(0x177)]({ 'success': 0x0, 'msg': 'Access\x20denies!\x20Invalid\x20token\x20found.', 'logout': !![] }); } catch (_0x326d1e) { console[_0x5241cc(0x16f)](_0x326d1e); } } };